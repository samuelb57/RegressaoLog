remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 50, "Sim", "Não"))
ggplot(dados, aes(x=danceability, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
View(dados)
install.packages("pacman")
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 50, "Sim", "Não"))
ggplot(dados, aes(x=danceability, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
View(dados)
install.packages("pacman")
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 50, "Sim", "Não"))
ggplot(dados, aes(x=valence, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
View(dados)
install.packages("pacman")
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 50, "Sim", "Não"))
ggplot(dados, aes(x=loudness, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
View(dados)
install.packages("pacman")
ggplot(dados, aes(x=time_signature, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 50, "Sim", "Não"))
ggplot(dados, aes(x=time_signature, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
View(dados)
install.packages("pacman")
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 50, "Sim", "Não"))
ggplot(dados, aes(x=instrumentalness, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
View(dados)
install.packages("pacman")
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 50, "Sim", "Não"))
ggplot(dados, aes(x=liveness, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
View(dados)
install.packages("pacman")
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 50, "Sim", "Não"))
ggplot(dados, aes(x=key, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
View(dados)
install.packages("pacman")
summary(dados)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
#dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
ggplot(dados, aes(x=key, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
#summary(dados)
View(dados)
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
#dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
ggplot(dados, aes(x=danceability, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
#summary(dados)
View(dados)
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
#dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
ggplot(dados, aes(x=danceability, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
#summary(dados)
View(dados)
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
#dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
ggplot(dados, aes(x=danceability, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
#summary(dados)
View(dados)
ggplot(dados, aes(x=danceability, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
ggplot(dados, aes(x=danceability, y=popular)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
install.packages("pacman")
dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
ggplot(dados, aes(x=energy, y=dançavel)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
#summary(dados)
View(dados)
install.packages("pacman")
summary(dados)
dados <- dados %>% mutate (valence = ifelse(happy > 0.48, "Sim", "Não"))
View(dados)
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
dados <- dados %>% mutate (valence = ifelse(happy > 0.48, "Sim", "Não"))
install.packages("pacman")
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
dados <- dados %>% mutate (valence = ifelse(happy > 0.48, "Sim", "Não"))
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
dados <- dados %>% mutate (happy = ifelse(valence > 0.48, "Sim", "Não"))
#model <- glm((energy))
ggplot(dados, aes(x=energy, y=happy)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
summary(dados)
View(dados)
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
dados <- dados %>% mutate (happy = ifelse(valence > 0.48, "Sim", "Não"))
#model <- glm((energy))
ggplot(dados, aes(x=popularity, y=happy)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
summary(dados)
View(dados)
install.packages("pacman")
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = T)
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
dados <- dados %>% mutate (happy = ifelse(valence > 0.48, "Sim", "Não"))
#model <- glm((energy))
ggplot(dados, aes(x=acousticness, y=happy)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
summary(dados)
View(dados)
install.packages("pacman")
model <- glm(energy ~ popularity, data = dados, family = "binomial")
View(model)
model
plot(mod, which[5])
plot(mod, which = 5)
summary(stdres(mod))
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse, psych, MASS,  DescTools, QuantPsyc) #pacotes basicos
summary(stdres(mod))
glimpse(dados)
dados$popular <- as.factor(dados$popular)
dados$dançavel <- as.factor(dados$dançavel)
dados$happy <- as.factor(dados$happy)
dados$explicit <- as.factor(dados$explicit)
dados$key <- as.factor(dados$key)
dados$mode <- as.factor(dados$mode)
dados$time_signature <- as.factor(dados$time_signature)
glimpse(dados)
summary(stdres(mod))
install.packages("pacman")
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr, magrittr, hrbrthemes, car, tidyverse, psych, MASS,  DescTools, QuantPsyc) #pacotes basicos
dados<-read.csv('dataset.csv', sep = ',', dec = '.', stringsAsFactors = TRUE)
glimpse(dados)
selected_columns <- c("popularity", "duration_ms", "explicit", "danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "track_genre")
remove_outliers <- function(data, col) {
quartiles <- quantile(col, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(col)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
return(subset(data, col > Lower & col < Upper))
}
dados <- remove_outliers(dados, dados$popularity)
dados <- remove_outliers(dados, dados$danceability)
dados <- remove_outliers(dados, dados$duration_ms)
dados <- remove_outliers(dados, dados$tempo)
dados <- remove_outliers(dados, dados$loudness)
dados <- remove_outliers(dados, dados$valence)
#Retirados as entradas com valor 0 na popularidade
dados <- dados %>% filter(popularity>0)
#criando variaveis binárias a partir de quantitativas
dados <- dados %>% mutate (popular = ifelse(popularity > 40, "Sim", "Não"))
dados <- dados %>% mutate (dançavel = ifelse(danceability > 0.58, "Sim", "Não"))
dados <- dados %>% mutate (happy = ifelse(valence > 0.48, "Sim", "Não"))
#transformando as variáveis binárias em fator
dados$popular <- as.factor(dados$popular)
dados$dançavel <- as.factor(dados$dançavel)
dados$happy <- as.factor(dados$happy)
dados$explicit <- as.factor(dados$explicit)
dados$key <- as.factor(dados$key)
dados$mode <- as.factor(dados$mode)
dados$time_signature <- as.factor(dados$time_signature)
model <- glm(happy ~ popularity + danceability, family = binomial(link = 'logit'), data = dados)
summary(stdres(mod))
